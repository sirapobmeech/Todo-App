[{"/Users/new/Desktop/Todo-App/todo-app/src/index.js":"1","/Users/new/Desktop/Todo-App/todo-app/src/reportWebVitals.js":"2","/Users/new/Desktop/Todo-App/todo-app/src/App.js":"3","/Users/new/Desktop/Todo-App/todo-app/src/containers/NotFound.js":"4","/Users/new/Desktop/Todo-App/todo-app/src/containers/Home.js":"5","/Users/new/Desktop/Todo-App/todo-app/src/actions/types.js":"6","/Users/new/Desktop/Todo-App/todo-app/src/reducers/index.js":"7","/Users/new/Desktop/Todo-App/todo-app/src/reducers/todoReducer.js":"8","/Users/new/Desktop/Todo-App/todo-app/src/reducers/fetchReducer.js":"9","/Users/new/Desktop/Todo-App/todo-app/src/components/progressBar.js":"10","/Users/new/Desktop/Todo-App/todo-app/src/actions/todoActions.js":"11","/Users/new/Desktop/Todo-App/todo-app/src/components/taskLayOut.js":"12","/Users/new/Desktop/Todo-App/todo-app/src/api/todoApi.js":"13","/Users/new/Desktop/Todo-App/todo-app/src/components/todolistItem.js":"14"},{"size":767,"mtime":1609047295260,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609047295263,"results":"17","hashOfConfig":"16"},{"size":526,"mtime":1609047295256,"results":"18","hashOfConfig":"16"},{"size":145,"mtime":1609047295260,"results":"19","hashOfConfig":"16"},{"size":4055,"mtime":1609047885100,"results":"20","hashOfConfig":"16"},{"size":263,"mtime":1609047885110,"results":"21","hashOfConfig":"16"},{"size":203,"mtime":1609047885101,"results":"22","hashOfConfig":"16"},{"size":475,"mtime":1609047885101,"results":"23","hashOfConfig":"16"},{"size":483,"mtime":1609047885100,"results":"24","hashOfConfig":"16"},{"size":773,"mtime":1609047885098,"results":"25","hashOfConfig":"16"},{"size":2367,"mtime":1609047885094,"results":"26","hashOfConfig":"16"},{"size":2129,"mtime":1609047885099,"results":"27","hashOfConfig":"16"},{"size":150,"mtime":1609047885093,"results":"28","hashOfConfig":"16"},{"size":2620,"mtime":1609047885099,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e49w4r",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},"/Users/new/Desktop/Todo-App/todo-app/src/index.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/reportWebVitals.js",[],["64","65"],"/Users/new/Desktop/Todo-App/todo-app/src/App.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/containers/NotFound.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/containers/Home.js",["66","67"],"import React, { useState, useEffect } from 'react';\nimport { exampleFetch } from '../actions/exampleActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Table from '../components/Table';\nimport logo from '../assets/images/umeal.png'\n\nfunction Home() {\n    const dispatch = useDispatch()\n    let InitialUser = useSelector(state => state.example)\n    const [exampleUsers, setexampleUsers] = useState([])\n\n    useEffect(() => {\n        dispatch(exampleFetch()) // เรียกใช้งาน Action เพื่อสร้าง api request เมื่อ Component ทำการ mounted เรียบร้อยแล้ว\n    }, [])\n    useEffect(() => {\n        setexampleUsers(InitialUser)\n        console.log(\"receieve data : \", InitialUser)\n    }, [InitialUser])\n    return (\n        <div className=\"oc\">\n            <h1 style={{ textAlign: \"center\" }}>\n                This is an React-Seed for Developers\n            </h1><br />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }} >\n                <img src={logo} />\n            </div><br />\n            {/* ---------- ตัวอย่างข้อมูลที่มากจากการเรียกใช้งาน API ---------- */}\n            <h1 style={{ textAlign: \"center\" }}>\n                Example users data from \"jsonplaceholder API\"\n            </h1><br />\n            {exampleUsers.pending === true && <div>\n                <h1>Loading</h1>\n            </div>}\n            {(!exampleUsers.error) ? <div>{<Table usersObj={exampleUsers} />}</div> : <h1>Error</h1>}\n            {/* ------------------------------------------------------------- */}\n        </div>\n    )\n}\nexport default Home","/Users/new/Desktop/Todo-App/todo-app/src/actions/types.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/reducers/index.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/reducers/todoReducer.js",["68"],"import { GET_TODO } from '../actions/types'\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case GET_TODO.SUCCESS:\n            return { error: false, data: action.payload, pending: false }\n        case GET_TODO.PENDING:\n            return { error: false, data: action.payload, pending: true }\n        case GET_TODO.FAILURE:\n            return { error: true, data: action.payload, pending: false }\n        default:\n            return state\n    }\n}","/Users/new/Desktop/Todo-App/todo-app/src/reducers/fetchReducer.js",["69"],"import { FETCH_TODO } from '../actions/types'\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case FETCH_TODO.SUCCESS:\n            return { error: false, data: action.payload, pending: false }\n        case FETCH_TODO.PENDING:\n            return { error: false, data: action.payload, pending: true }\n        case FETCH_TODO.FAILURE:\n            return { error: true, data: action.payload, pending: false }\n        default:\n            return state\n    }\n}","/Users/new/Desktop/Todo-App/todo-app/src/components/progressBar.js",["70"],"import React from 'react'\nimport './progressBar.css'\n\nconst ProgressBar = ({sortTodo}) => {\n    let  total = 0;\n    let complete = 0;\n   sortTodo.data && sortTodo.data.map((elem) => {\n        total++\n        if(elem.completed){\n            complete++\n        }\n    })\n    return (\n        <div className=\"progress_container\">\n            <span style={{ color: \"#FFF\" }} className=\"head_topic\">Progress</span>\n            <div className=\"loading_container\">\n                <div style={{width : `${(complete/total) * 100}%`}} className=\"success_bar\">\n\n                </div>\n            </div>\n            <span style={{ color: \"#EBB9B8\" }} className=\"content_topic\">\n                {complete} Completed\n           </span>\n        </div>\n    )\n}\n\nexport default ProgressBar","/Users/new/Desktop/Todo-App/todo-app/src/actions/todoActions.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/components/taskLayOut.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/api/todoApi.js",[],"/Users/new/Desktop/Todo-App/todo-app/src/components/todolistItem.js",["71","72"],"import React from 'react';\nimport './taskLayOut.css';\nimport threeDots from '../assets/images/more.png';\nconst TodolistItem = ({ elem, option, setOption, index, onDelete, setBackDrop, closeAllTap, titleEdit, setTitleEdit, onSave, changeTodo }) => {\n    const threeDotClick = () => {\n        setBackDrop(true)\n        setOption([...option, option[index].menu = true])\n    }\n    const editButtonClick = () => {\n        closeAllTap()\n        setTitleEdit(elem.title)\n        setOption([...option, option[index].menu = false, option[index].edit = true])\n    }\n    const onChange = (status, id) => {\n        changeTodo(!status, id)\n    }\n    return (\n        <div className=\"todolist_item\">\n            <div>\n                {!option[index].edit && <label className=\"content\">\n                    <input onChange={() => onChange(elem.completed, elem.id)} checked={elem.completed} type=\"checkbox\" id={elem.id} name=\"status\" value={elem.id} />\n                    <div className=\"checkmark\"></div>\n                    <span style={{ marginLeft: 16, color: elem.completed ? \"#A9A9A9\" : \"#000000\", textDecoration: elem.completed ? \"line-through\" : \"none\" }} className=\"content_topic\">{elem.title}</span>\n                </label>}\n                {option[index].edit &&\n                    <div className=\"todolist_input\">\n                        <input onChange={(e) => setTitleEdit(e.target.value)} value={titleEdit} style={{ marginLeft: 16 }} className=\"content_topic\" />\n                    </div>}\n            </div>\n            <div>\n                {!option[index].edit && <img onClick={() => threeDotClick()} style={{ cursor: \"pointer\" }} style={{ width: 20, minHeight: 5 }} src={threeDots} />}\n                {option[index].edit && <div>\n                    <button onClick={() => onSave(titleEdit, elem.id)} className=\"todolist_button\">SAVE</button>\n                </div>}\n                {option[index].menu && !option[index].edit && <div style={{ width: 1, height: 1, textAlign: \"left\", zIndex: 999 }}>\n                    <div className=\"option_modal\">\n                        <div onClick={() => editButtonClick()} style={{ fontWeight: \"normal\", cursor: \"pointer\" }} className=\"content_topic\">\n                            Edit\n                        </div><br />\n                        <div onClick={() => onDelete(elem.id)} style={{ color: \"#E07C7C\", fontWeight: \"normal\", cursor: \"pointer\" }} className=\"content_topic\">\n                            Delete\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        </div>\n    );\n};\n\nexport default TodolistItem;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":22,"column":8,"nodeType":"79","endLine":22,"endColumn":10,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":37,"column":8,"nodeType":"79","endLine":37,"endColumn":14,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":1,"nodeType":"85","endLine":14,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":3,"column":1,"nodeType":"85","endLine":14,"endColumn":2},{"ruleId":"86","severity":1,"message":"87","line":7,"column":46,"nodeType":"88","messageId":"89","endLine":7,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":31,"column":41,"nodeType":"92","endLine":31,"endColumn":162},{"ruleId":"93","severity":1,"message":"94","line":31,"column":108,"nodeType":"95","endLine":31,"endColumn":143},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'filterFunction' and 'type'. Either include them or remove the dependency array.",["99"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [filterFunction, todo, type]",{"range":"106","text":"107"},[902,904],"[dispatch]",[1410,1416],"[filterFunction, todo, type]"]